apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'
apply plugin: 'com.palantir.docker'

group = 'registry.cn-shenzhen.aliyuncs.com/amiba'
// version = project.findProperty('projVersion') ?: '2.0.4'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName  "web"
    mainClassName = "com.zeusro.ExampleSpringBootApplication"        
    archivesBaseName = "app"
}

buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.19.2')
    }
}

repositories {
    mavenLocal()
    maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter' }
    maven { url "https://plugins.gradle.org/m2/" }
    jcenter()
}

dependencies {
    //同级别目录模块
//    compile project(':xxx')
    compile group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.3.2'
    compile('org.springframework.boot:spring-boot-starter-web')
    compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.3.2'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}

docker {
    dockerfile file('Dockerfile') //DockerFile路径
    name "${project.group}/${jar.baseName}:${jar.version}"//镜像名及标签
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])//设置环境变量
}